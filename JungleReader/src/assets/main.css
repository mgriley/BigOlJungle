@import './base.css';
/*@import './reader.css';*/

:root {
}

/*
Disable double-tap to globally on mobile. It causes a lot of problems with buttons
like menu show/hide.
See: https://stackoverflow.com/questions/10614481/disable-double-tap-zoom-option-in-browser-on-touch-devices
*/
* {
  touch-action: manipulation;
}

#app {
  margin: 0 auto;
  /*padding: 2rem;*/
  /*font-weight: normal;*/
}

/* Prevent flashes on tap on mobile */
/* https://stackoverflow.com/questions/6211959/html5-div-flashes-on-tap */
div {
  -webkit-tap-highlight-color: rgba(0,0,0,0);
};

p {
  line-height: 1.6;
}

h1 {
  font-size: 3rem;
  font-weight: 800;
  letter-spacing: -2px;
}

h2 {
  font-size: 2.5rem;
  font-weight: 700;
  letter-spacing: -1px;
}

h3 {
  font-size: 1.5rem;
  font-weight: 700;
  letter-spacing: -1px;
}

h4 {
  font-size: 1.2rem;
  font-weight: 500;
}

.Italic {
  font-style: italic;
}

.Bold {
  font-weight: bold;
}

b {
  font-weight: 600;
}

a {
  text-decoration: none;
  color: var(--main-text);
  transition: 0.2s;
}

@media (hover: hover) {
  a:hover {
    background-color: var(--link-hover-bg);
  }
}

a:active {
  background-color: var(--link-hover-bg);
}

button {
  min-width: 100px;
  padding: 5px 10px;
  /*margin: 4px 0px;*/
  background: none;
  color: var(--main-text);
  border: 2px solid var(--main-text);
  border-radius: 6px;
  cursor: pointer;
  font-weight: 600;
  font-size: 1em;
}

@media (hover: hover) {
  button:hover {
    background-color: var(--main-text);
    color: var(--main-bg);
  }
}

button:active {
  background-color: var(--main-text);
  color: var(--main-bg);
}

.CodeBlock {
  /*background-color: var(--input-bg);*/
  padding: 10px;
  border: 2px solid var(--main-text);
  border-radius: 5px;
  font-family: monospace;
  font-size: 1rem;
  /* white-space: pre-wrap; */
  /* I'm not sure how to get this working right for mobile, so use pre-wrap for now */
  white-space: pre-wrap;
  overflow-x: scroll;
}

.TextButton {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  font-weight: 700;
  font-size: 1.1em;
}


@media (hover: hover) {
  .TextButton:hover {
    color: var(--text-button-hover);
  }
}

.TextButton:active {
  color: var(--text-button-hover);
}

.SmallButton {
  border: none;
  padding: 0px;
  margin: 5px 0px;
  min-width: 20px;
  /* line-height: 1rem; */
}

.LinkButton {
  text-decoration: underline;
  font-weight: 600;
}

/*
@media (min-width: 1024px) {
  body {
    display: flex;
    place-items: center;
  }

  #app {
    display: grid;
    grid-template-columns: 1fr 1fr;
    padding: 0 2rem;
  }
}
*/

/* For text you don't want to get highlighted when
it gets clicked. Say if using for a button
*/
.NoSelect {
  user-select: none;
}

.TextButton {
  user-select: none;
  cursor: pointer;
}

.MockButton {
  user-select: none;
  cursor: pointer;
}

.Block {
  display: block;
}

.DraggedChosenItem {
  background-color: var(--color-link-hover);
}

.FeatherIcon {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.Flex {
  display: flex;
  flex-flow: row wrap;
}

.MarginLeft {
  margin-left: 15px;
}

.MarginTop {
  margin-top: 10px;
}

.DeleteButton {
  background-color: var(--nice-red);
  border-color: var(--nice-red);
  color: var(--main-text);
}

@media (hover: hover) {
  .DeleteButton:hover {
    background-color: var(--bright-red);
    border-color: var(--bright-red);
    color: var(--main-text);
  }
}

.DeleteButton:active {
  background-color: var(--bright-red);
  border-color: var(--bright-red);
  color: var(--main-text);
}

.HelpButton {
  background-color: var(--help-btn);
  border-color: var(--help-btn);
  color: var(--main-bg)
}

@media (hover: hover) {
  .HelpButton:hover {
    background-color: var(--bright-help-btn);
    border-color: var(--bright-help-btn);
  }
}

.HelpButton:active {
  background-color: var(--bright-help-btn);
  border-color: var(--bright-help-btn);
}

.FormFieldName {
  margin-top: 10px;
  margin-bottom: 5px;
}

/* Note: if need to set a small min-width, set the <input size="1" .../>. Default size is large and overrides min-width */
/* See: https://stackoverflow.com/questions/29470676/why-doesnt-the-input-element-respect-min-width */
.BasicTextInput {
  display: block;
  padding: 5px;
  /* margin: 5px 0; */
  /*border: 1px solid var(--main-text);*/
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  background-color: var(--input-bg);
}

input[type="text"], textarea {
  background-color: var(--input-bg); 
}

select {
  font-size: 1rem;
  color: var(--main-text);
  background-color: var(--input-bg);
  /*border: 1px solid var(--mute-text);*/
  border: none;
  border-radius: 4px;
  padding: 5px;
  min-width: 18ch;
  max-width: 30ch;
}

.PageHeader {
  margin-bottom: 20px;
}

